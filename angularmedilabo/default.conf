server {
    listen 80;
    server_name localhost;

    # Set port for redirects
    port_in_redirect off;
    absolute_redirect off;

    root /usr/share/nginx/html;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

# Redirige les appels sans slash vers /patients/
    location = /patients {
        return 301 /patients/;
    }

# Redirection vers le microservice micropatient (avec slash)
    location ^~ /api/patients/ {
        if ($request_method = 'OPTIONS') {
           add_header 'Access-Control-Allow-Origin' '*';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
           add_header 'Access-Control-Max-Age' 1728000;
           add_header 'Content-Length' 0;
           add_header 'Content-Type' 'text/plain charset=UTF-8';
           return 204;
        }

        # Remove trailing slash and rewrite to /patients
        rewrite ^/api/patients/$ /patients break;
        # Handle other paths with trailing slash
        rewrite ^/api/patients/(.+)$ /patients/$1 break;
        proxy_pass http://microapigateway:8996;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin *;
  }

# Redirection vers le microservice micropatient (sans slash)
    location = /api/patients {
        if ($request_method = 'OPTIONS') {
           add_header 'Access-Control-Allow-Origin' '*';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
           add_header 'Access-Control-Max-Age' 1728000;
           add_header 'Content-Length' 0;
           add_header 'Content-Type' 'text/plain charset=UTF-8';
           return 204;
        }

        rewrite ^/api/patients$ /patients break;
        proxy_pass http://microapigateway:8996;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin *;
  }

# Redirige les appels sans slash vers /evaluer/
    location = /evaluer {
        return 301 /evaluer/;
    }

# Redirection vers le microservice microrisque (si besoin)
    location ^~ /api/evaluer/ {
        if ($request_method = 'OPTIONS') {
           add_header 'Access-Control-Allow-Origin' '*';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
           add_header 'Access-Control-Max-Age' 1728000;
           add_header 'Content-Length' 0;
           add_header 'Content-Type' 'text/plain charset=UTF-8';
           return 204;
        }

        rewrite ^/api/evaluer/(.*)$ /evaluer/$1 break;
        proxy_pass http://microapigateway:8996;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin *;
  }

# Redirige les appels sans slash vers /hist/
    location = /hist {
        return 301 /hist/;
    }

# Redirection vers le microservice microhisto (si besoin)
    location ^~ /api/hist/ {
        if ($request_method = 'OPTIONS') {
           add_header 'Access-Control-Allow-Origin' '*';
           add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
           add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
           add_header 'Access-Control-Max-Age' 1728000;
           add_header 'Content-Length' 0;
           add_header 'Content-Type' 'text/plain charset=UTF-8';
           return 204;
        }

        rewrite ^/api/hist/(.+)$ /hist/$1 break;
        proxy_pass http://microapigateway:8996;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin *;
  }
}

