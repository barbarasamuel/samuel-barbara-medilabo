services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./angularmedilabo/default.conf:/etc/nginx/conf.d/default.conf
      - ./angularmedilabo/dist/medilabo/browser:/usr/share/nginx/html:ro
    depends_on:
      - micropatient
      - microhisto
      - microrisque
    networks:
      - app-network

# Service eureka-server
  microeureka-server:
    image: eurekaserver:latest
    build:
      context: ./microeureka-server
    container_name: microeureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network

# Service de la base de données MySQL
  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: medilabo
      MYSQL_ROOT_PASSWORD: rootroot_2024
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

# Service de la base de données MongoDB
  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"  # facultatif : à exposer uniquement pour debug
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootroot_2024
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network

  # Service de microservice "microhisto"
  microhisto:
    build: ./microhisto
    ports:
      - "8998:8998"  # Expose le port de l'hôte vers le port du conteneur
    environment:
      # Ajout de la variable d'environnement de connexion Mongo
      MONGO_URL: mongodb://root:rootroot_2024@mongodb:27017
      SPRING_APPLICATION_NAME: microhisto
      SERVER_PORT: 8998
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: true
    depends_on:
      - mongodb
      - microeureka-server
    networks:
      - app-network

  # Service de microservice "micropatient"
  micropatient:
    build: ./micropatient
    ports:
      - "8999:8999"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/medilabo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootroot_2024
      SPRING_APPLICATION_NAME: micropatient
      SERVER_PORT: 8999
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: true    
    depends_on:
      - mysql
      - microeureka-server
    networks:
      - app-network

  # Service de microservice "microrisque"
  microrisque:
    build: ./microrisque
    ports:
      - "8997:8997"
    depends_on:
      - microeureka-server
    networks:
      - app-network
    environment:
      SPRING_APPLICATION_NAME: microrisque
      SERVER_PORT: 8997
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: true

  # Service frontend angularmedilabo
#  frontend:
#    build: ./angularmedilabo
#    ports:
#     - "80:80"  # Expose le port 80 de l'hôte vers le port 80 du conteneur
#    depends_on:
#      - microhisto
#      - micropatient
#      - microrisque  # Le frontend dépend des microservices backend
#    networks:
#      - app-network

  microapigateway:
    image: apigateway:latest
    build:
      context: ./microapigateway
    container_name: microapigateway
    ports:
      - "8996:8996"
    depends_on:
      - microeureka-server
    networks:
      - app-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      SPRING_APPLICATION_NAME: microapigateway
      SERVER_PORT: 8996

volumes:
  mysql_data:
  mongo_data:

networks:
  app-network:
    driver: bridge  # Utilise un réseau bridge pour la communication interne entre services