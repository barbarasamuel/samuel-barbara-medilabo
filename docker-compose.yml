services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "5900:80"
    volumes:
      - ./angularmedilabo/default.conf:/etc/nginx/conf.d/default.conf
      - ./angularmedilabo/dist/medilabo/browser:/usr/share/nginx/html:ro
    depends_on:
      - microapigateway
    networks:
      - app-network

# Service eureka-server
  microeureka-server:
    image: eurekaserver:latest
    build:
      context: ./microeureka-server
      dockerfile: Dockerfile
    container_name: microeureka-server
    ports:
      - "8761:8761"
    networks:
      - app-network

# Service de la base de données MySQL
  mysql:
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: medilabo
      MYSQL_ROOT_PASSWORD: rootroot_2024
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - app-network

# Service de la base de données MongoDB
  mongodb:
    image: mongo:6
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"  # facultatif : à exposer uniquement pour debug
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootroot_2024
      MONGO_INITDB_DATABASE: admin
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--host", "localhost", "--port", "27017", "--username", "root", "--password", "rootroot_2024", "--authenticationDatabase", "admin", "--eval", "db.adminCommand('ping')"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

# Service d'initialisation
  db-init:
    image: mongo:6
    command: >
      bash -c '
        until mongosh mongodb://root:rootroot_2024@mongodb:27017/medilabo?authSource=admin --eval "db.runCommand({ ping: 1 })" > /dev/null 2>&1; do
          echo " En attente de MongoDB...";
          sleep 2;
        done &&
        echo " MongoDB prêt, création de la base et des index..." &&
        mongosh mongodb://root:rootroot_2024@mongodb:27017/medilabo?authSource=admin --eval "
          db.histo.insertOne({
            patId: 1,
            patient: \"Dupont\",
            note: \"Fumeur\"
          });
          db.histo.createIndex({patId: 1});
          db.histo.createIndex({patient: 1});
          db.histo.createIndex({patId: 1, patient: 1});
          echo(\"Base de données medilabo initialisée avec succès\");
        "
      '
    depends_on:
      - mongodb
    networks:
      - app-network

# Service de microservice "microhisto"
  microhisto:
    build:
      context: ./microhisto
      dockerfile: Dockerfile
    ports:
      - "8998:8998"  # Expose le port de l'hôte vers le port du conteneur
    environment:
      # Ajout de la variable d'environnement de connexion Mongo
      SPRING_DATA_MONGODB_URI: mongodb://root:rootroot_2024@mongodb:27017/medilabo?authSource=admin
      SPRING_DATA_MONGODB_DATABASE: medilabo
      SPRING_APPLICATION_NAME: microhisto
      SERVER_PORT: 8998
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: true
    depends_on:
      #db-init:
    # condition: service_completed_successfully
     - microeureka-server
    networks:
      - app-network

# Service de microservice "micropatient"
  micropatient:
    build:
      context: ./micropatient
      dockerfile: Dockerfile
    ports:
      - "8999:8999"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/medilabo?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: rootroot_2024
      SPRING_APPLICATION_NAME: micropatient
      SERVER_PORT: 8999
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: true
    depends_on:
      - mysql
      - microeureka-server
    networks:
      - app-network

# Service de microservice "microrisque"
  microrisque:
    build:
      context: ./microrisque
      dockerfile: Dockerfile
    ports:
      - "8997:8997"
    depends_on:
      - microeureka-server
    networks:
      - app-network
    environment:
      SPRING_APPLICATION_NAME: microrisque
      SERVER_PORT: 8997
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: true

      # Service frontend angularmedilabo
    #frontend:
    #build: ./angularmedilabo
        #ports:
      # - "5900:80"  # Expose le port 5900 de l'hôte vers le port 80 du conteneur
        #depends_on:
      # - microapigateway  # Le frontend dépend des microservices backend et de la gateway
        #networks:
      #- app-network

  microapigateway:
    image: apigateway:latest
    build:
      context: ./microapigateway
      dockerfile: Dockerfile
    container_name: microapigateway
    ports:
      - "8996:8996"
    depends_on:
      - microeureka-server
    networks:
      - app-network
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://microeureka-server:8761/eureka/
      SPRING_APPLICATION_NAME: microapigateway
      SERVER_PORT: 8996

volumes:
  mysql_data:
  mongo_data:

networks:
  app-network:
    driver: bridge
